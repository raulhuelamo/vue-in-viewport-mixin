!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e(require("scrollmonitor")):"function"==typeof define&&define.amd?define(["scrollmonitor"],e):"object"==typeof exports?exports["vue-in-viewport-mixin"]=e(require("scrollmonitor")):t["vue-in-viewport-mixin"]=e(t.scrollmonitor)}(this,function(t){return function(t){function e(o){if(i[o])return i[o].exports;var n=i[o]={exports:{},id:o,loaded:!1};return t[o].call(n.exports,n,n.exports,e),n.loaded=!0,n.exports}var i={};return e.m=t,e.c=i,e.p="",e(0)}([function(t,e,i){var o;o=i(1),t.exports={props:{inViewportActive:{type:Boolean,default:!0},inViewportOnce:{type:Boolean,default:!1},inViewportOffset:{type:Number,default:0},inViewportOffsetTop:{type:Number,default:null},inViewportOffsetBottom:{type:Number,default:null}},data:function(){return{scrollMonitor:null,inViewport:{now:null,fully:null,above:null,below:null,listening:!1}}},computed:{inViewportOffsetTopComputed:function(){var t;return null!=(t=this.inViewportOffsetTop)?t:this.inViewportOffset},inViewportOffsetBottomComputed:function(){var t;return null!=(t=this.inViewportOffsetBottom)?t:this.inViewportOffset},inViewportOffsetComputed:function(){return{top:this.inViewportOffsetTopComputed,bottom:this.inViewportOffsetBottomComputed}}},mounted:function(){return this.$nextTick(this.inViewportInit)},destroyed:function(){return this.removeInViewportHandlers()},watch:{inViewportActive:function(t){return t?this.addInViewportHandlers():this.removeInViewportHandlers()},inViewportOffsetComputed:{deep:!0,handler:function(){return this.removeInViewportHandlers(),this.inViewportInit()}}},methods:{inViewportInit:function(){if(this.inViewportActive)return this.addInViewportHandlers()},addInViewportHandlers:function(){if(!this.inViewport.listening)return this.inViewport.listening=!0,this.scrollMonitor=o,this.scrollMonitorWatcher=o.create(this.$el,this.inViewportOffsetComputed),this.scrollMonitorWatcher.on("stateChange",this.updateInViewport),this.updateInViewport()},removeInViewportHandlers:function(){if(this.inViewport.listening)return this.inViewport.listening=!1,this.scrollMonitorWatcher&&this.scrollMonitorWatcher.destroy(),delete this.scrollMonitorWatcher},updateInViewport:function(){if(this.inViewport.now=this.scrollMonitorWatcher.isInViewport,this.inViewport.fully=this.scrollMonitorWatcher.isFullyInViewport,this.inViewport.above=this.scrollMonitorWatcher.isAboveViewport,this.inViewport.below=this.scrollMonitorWatcher.isBelowViewport,this.inViewportOnce&&this.inViewport.now)return this.removeInViewportHandlers()}}}},function(e,i){e.exports=t}])});